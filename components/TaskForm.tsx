"use client";

import { useState } from "react";
import { Status, Task } from "@/types/task";
import { useRouter } from "next/navigation";

interface TaskFormProps {
    editMode?: boolean;
}

export default function TaskForm({ editMode }: TaskFormProps) {
    const [title, setTitle] = useState("");
    const [description, setDescription] = useState("");
    const [type, setType] = useState("–°—Ç–∞–Ω–¥–∞—Ä—Ç");
    const router = useRouter();

    const handleSubmit = (e: React.FormEvent) => {
        e.preventDefault();

        // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
        const saved = localStorage.getItem("tasks");
        const tasks: Task[] = saved ? JSON.parse(saved) : [];

        // üëá –±–µ—Ä—ë–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Å—á—ë—Ç—á–∏–∫ id
        const counter = Number(localStorage.getItem("taskCounter") || "1");
        const newId = `RAZRABOTKA-${counter}`;
        localStorage.setItem("taskCounter", String(counter + 1));

        // –°–æ–∑–¥–∞—ë–º –∑–∞–¥–∞—á—É
        const newTask: Task = {
            id: newId,
            title,
            description,
            type,
            status: Status.TODO,
        };

        const updated = [...tasks, newTask];
        localStorage.setItem("tasks", JSON.stringify(updated));

        // —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é
        router.push("/");
    };

    return (
        <form onSubmit={handleSubmit}>
            <div>
                <label>–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏*</label>
                <input value={title} onChange={e => setTitle(e.target.value)} required />
            </div>
            <div>
                <label>–û–ø–∏—Å–∞–Ω–∏–µ</label>
                <textarea value={description} onChange={e => setDescription(e.target.value)} />
            </div>
            <div>
                <label>–¢–∏–ø –∑–∞–¥–∞—á–∏</label>
                <input value={type} onChange={e => setType(e.target.value)} />
            </div>
            <div style={{ marginTop: "10px" }}>
                <button type="submit" className="primary">
                    {editMode ? "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å" : "–°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É"}
                </button>
                <button type="button" className="danger" onClick={() => router.push("/")}>
                    –û—Ç–º–µ–Ω–∞
                </button>
            </div>
        </form>
    );
}
